// RO data = 0/0 bytes
// RW data = 0/65600 bytes
// Stack size = 16384 bytes

// Instructions = 1369
// Code size = 4222 bytes

      : @0 (gas: 4)
     0: a2 = a0
     2: i32 a3 = a0 >> 16
     5: a0 = 0x0
     7: jump @7 if a3 != 0
      : @1 (gas: 2)
    10: a3 = 0x10000
    15: jump @7 if a3 <u a1
      : @2 (gas: 4)
    18: a1 = a1 + a2
    21: i32 a0 = a1 + 0x1f
    24: a0 = a0 & 0xffffffe0
    27: jump @4 if a0 <=u 65536
      : @3 (gas: 2)
    33: a0 = 0x0
    35: ret
      : @4 (gas: 2)
    37: a1 = i32 [0x20000]
    42: jump @6 if a1 >=u a0
      : @5 (gas: 5)
    45: u32 [0x20000] = a0
    50: a1 = a0
    52: a0 = 0x20020
    57: a0 = a0 + a1
    60: ret
      : @6 (gas: 3)
    62: a0 = 0x20020
    67: a0 = a0 + a1
    70: ret
      : @7 (gas: 1)
    72: ret
      : @8 (gas: 7)
    74: sp = sp - 16
    77: u64 [sp + 8] = ra
    80: u64 [sp] = s0
    82: s0 = a0 & 0x1
    85: a0 = 0x0
    87: a1 = 0x0
    89: ra = 2, jump @0
      : @9 [@dyn 1] (gas: 3)
    93: u64 [0x20008] = a0
    98: ecalli 3 // 'call_data_size'
   100: fallthrough
      : @10 (gas: 3)
   101: u64 [0x20010] = a0
   106: u8 [0x30020] = s0
   111: jump @12 if s0 == 0
      : @11 (gas: 1)
   114: ra = 4, jump @13
      : @12 [@dyn 2] (gas: 1)
   118: ra = 6, jump @29
      : @13 [@dyn 3] (gas: 10)
   123: sp = sp - 224
   127: u64 [sp + 216] = ra
   131: u64 [sp + 208] = s0
   135: u64 [sp + 200] = s1
   139: s0 = sp + 0xe0
   143: sp = sp & 0xffffffe0
   146: s1 = sp
   148: a0 = 0x40
   151: a1 = 0x20
   154: ra = 8, jump @0
      : @14 [@dyn 4] (gas: 1)
   159: jump @27 if a0 == 0
      : @15 (gas: 18)
   163: a1 = 0x20008
   168: u64 [0x20058] = 0
   173: u64 [0x20050] = 0
   178: u64 [0x20048] = 0
   183: a0 = 0x8000000000000000
   193: u64 [s1 + 48] = a1
   196: u64 [0x20060] = a0
   201: a0 = sp - 32
   204: a0 = a0 & 0xffffffe0
   207: u64 [s1 + 56] = a0
   210: sp = a0
   212: u64 [a0 + 24] = 0
   215: u64 [a0 + 16] = 0
   218: u64 [a0 + 8] = 0
   221: u64 [a0 + 0] = 0
   223: i32 a0 = a0 + 0x0
   225: ecalli 12 // 'value_transferred'
   227: fallthrough
      : @16 (gas: 9)
   228: a3 = u64 [s1 + 56]
   231: a0 = u64 [a3 + 16]
   234: a1 = u64 [a3 + 24]
   237: a2 = u64 [a3 + 8]
   240: a3 = u64 [a3]
   242: a1 = a1 | a2
   245: a0 = a0 | a3
   248: a0 = a0 | a1
   251: jump @25 if a0 != 0
      : @17 (gas: 89)
   255: i32 a0 = s1 + 0x40
   258: ecalli 4 // 'caller'
   260: a0 = u64 [s1 + 72]
   263: a1 = i32 [s1 + 80]
   266: a2 = u64 [s1 + 64]
   269: a0 = reverse a0
   271: a3 = a0 << 32
   274: a1 = reverse a1
   276: a1 = a1 >> 32
   279: a1 = a1 | a3
   282: u64 [s1 + 56] = a1
   285: a0 = a0 >> 32
   288: a1 = reverse a2
   290: a2 = a1 << 32
   293: a0 = a0 | a2
   296: u64 [s1 + 40] = a0
   299: a1 = a1 >> 32
   302: u64 [s1 + 32] = a1
   305: u64 [s1 + 120] = 0
   308: u64 [s1 + 112] = 0
   311: u64 [s1 + 104] = 0
   314: u64 [s1 + 96] = 1
   318: a0 = sp - 32
   321: a0 = a0 & 0xffffffe0
   324: sp = a0
   326: u64 [a0 + 24] = 0
   329: u64 [a0 + 16] = 0
   332: u64 [a0 + 8] = 0
   335: u64 [a0 + 0] = 0
   337: a3 = a0
   339: u64 [s1 + 24] = a0
   342: a0 = sp - 8
   345: a0 = a0 & 0xffffffe0
   348: sp = a0
   350: u64 [a0 + 24] = 0
   353: u64 [a0 + 16] = 0
   356: u64 [a0 + 8] = 0
   359: u64 [a0 + 0] = 256
   363: i32 a3 = a3 + 0x0
   365: i32 a4 = a0 + 0x0
   367: i32 a1 = s1 + 0x60
   370: a2 = 0xffffffff
   373: a0 = 0x0
   375: ecalli 5 // 'get_storage'
   377: a1 = u64 [s1 + 24]
   380: a0 = u32 [a1 + 20]
   383: a1 = u64 [a1 + 24]
   386: a0 = a0 << 32
   389: a2 = u64 [s1 + 32]
   392: a0 = a0 | a2
   395: u64 [s1 + 152] = 0
   399: u64 [s1 + 144] = 0
   403: u64 [s1 + 136] = 0
   407: u64 [s1 + 128] = 1
   412: a2 = sp - 32
   415: a2 = a2 & 0xffffffe0
   418: sp = a2
   420: u64 [a2 + 24] = a1
   423: u64 [a2 + 16] = a0
   426: a0 = u64 [s1 + 40]
   429: u64 [a2 + 8] = a0
   432: a0 = u64 [s1 + 56]
   435: u64 [a2] = a0
   437: i32 a3 = a2 + 0x0
   439: i32 a1 = s1 + 0x80
   443: a2 = 0xffffffff
   446: a4 = 0x20
   449: a0 = 0x0
   451: ecalli 11 // 'set_storage'
   453: u64 [s1 + 184] = 0
   457: u64 [s1 + 176] = 0
   461: u64 [s1 + 168] = 0
   465: u64 [s1 + 160] = 0
   469: a0 = sp - 32
   472: a0 = a0 & 0xffffffe0
   475: sp = a0
   477: u64 [a0 + 24] = 0
   480: u64 [a0 + 16] = 0
   483: u64 [a0 + 8] = 0
   486: u64 [a0 + 0] = 0
   488: i32 a3 = a0 + 0x0
   490: i32 a1 = s1 + 0xa0
   494: a2 = 0xffffffff
   497: a4 = 0x20
   500: a0 = 0x0
   502: ecalli 11 // 'set_storage'
   504: a0 = 0x80
   508: a1 = 0x0
   510: ra = 10, jump @0
      : @18 [@dyn 5] (gas: 1)
   515: jump @27 if a0 == 0
      : @19 (gas: 7)
   518: a0 = u64 [s1 + 48]
   521: i32 a0 = a0 + 0x80
   525: u64 [s1 + 56] = a0
   528: a1 = 0x0
   530: a2 = 0x0
   532: ecalli 1 // 'call_data_copy'
   534: fallthrough
      : @20 (gas: 2)
   535: a1 = i32 [0x20014]
   540: jump @22 if a1 == 0
      : @21 (gas: 4)
   543: a0 = 0x30040
   548: i32 a0 = a0 + 0x0
   550: ecalli 10 // 'set_immutable_data'
   552: fallthrough
      : @22 (gas: 3)
   553: a0 = 0x80
   557: a1 = 0x0
   559: ra = 12, jump @0
      : @23 [@dyn 6] (gas: 1)
   564: jump @27 if a0 == 0
      : @24 (gas: 5)
   567: a0 = 0x0
   569: a1 = u64 [s1 + 56]
   572: a2 = 0x0
   574: ecalli 9 // 'seal_return'
   576: fallthrough
      : @25 (gas: 3)
   577: a0 = 0x0
   579: a1 = 0x0
   581: ra = 14, jump @0
      : @26 [@dyn 7] (gas: 1)
   586: jump @28 if a0 != 0
      : @27 (gas: 1)
   589: trap
      : @28 (gas: 6)
   590: a1 = i32 [s1 + 48]
   593: a0 = 0x1
   596: a2 = 0x0
   598: ra = 0x10
   601: ecalli 9 // 'seal_return'
   603: fallthrough
      : @29 [@dyn 8] (gas: 10)
   604: sp = sp - 736
   608: u64 [sp + 728] = ra
   612: u64 [sp + 720] = s0
   616: u64 [sp + 712] = s1
   620: s0 = sp + 0x2e0
   624: sp = sp & 0xffffffe0
   627: s1 = sp
   629: a0 = 0x40
   632: a1 = 0x20
   635: ra = 18, jump @0
      : @30 [@dyn 9] (gas: 1)
   640: jump @70 if a0 == 0
      : @31 (gas: 11)
   644: a2 = 0x20008
   649: a1 = 0x20010
   654: u64 [0x20058] = 0
   659: u64 [0x20050] = 0
   664: u64 [s1 + 88] = a1
   667: a1 = i32 [0x20010]
   672: a0 = 0x8000000000000000
   682: u64 [0x20060] = a0
   687: u64 [s1 + 80] = a2
   690: u64 [0x20048] = 0
   695: jump @68 if a1 <=u 3
      : @32 (gas: 4)
   700: i32 a0 = s1 + 0x60
   703: a1 = 0x0
   705: ecalli 2 // 'call_data_load'
   707: fallthrough
      : @33 (gas: 2)
   708: a0 = i32 [s1 + 124]
   711: jump @41 if a0 >s 3504541103
      : @34 (gas: 1)
   719: jump @58 if a0 == 2376452955
      : @35 (gas: 1)
   727: jump @68 if a0 != 3281644680
      : @36 (gas: 11)
   735: a0 = sp - 32
   738: a0 = a0 & 0xffffffe0
   741: u64 [s1 + 72] = a0
   744: sp = a0
   746: u64 [a0 + 24] = 0
   749: u64 [a0 + 16] = 0
   752: u64 [a0 + 8] = 0
   755: u64 [a0 + 0] = 0
   757: i32 a0 = a0 + 0x0
   759: ecalli 12 // 'value_transferred'
   761: fallthrough
      : @37 (gas: 9)
   762: a3 = u64 [s1 + 72]
   765: a0 = u64 [a3 + 16]
   768: a1 = u64 [a3 + 24]
   771: a2 = u64 [a3 + 8]
   774: a3 = u64 [a3]
   776: a1 = a1 | a2
   779: a0 = a0 | a3
   782: a0 = a0 | a1
   785: jump @68 if a0 != 0
      : @38 (gas: 3)
   789: a0 = u64 [s1 + 88]
   792: a0 = i32 [a0]
   794: jump @68 if a0 <u 4
      : @39 (gas: 24)
   799: u64 [s1 + 632] = 0
   803: u64 [s1 + 624] = 0
   807: u64 [s1 + 616] = 0
   811: u64 [s1 + 608] = 0
   815: a0 = sp - 32
   818: a0 = a0 & 0xffffffe0
   821: sp = a0
   823: u64 [a0 + 24] = 0
   826: u64 [a0 + 16] = 0
   829: u64 [a0 + 8] = 0
   832: u64 [a0 + 0] = 0
   834: a3 = a0
   836: u64 [s1 + 88] = a0
   839: a0 = sp - 8
   842: a0 = a0 & 0xffffffe0
   845: sp = a0
   847: u64 [a0 + 24] = 0
   850: u64 [a0 + 16] = 0
   853: u64 [a0 + 8] = 0
   856: u64 [a0 + 0] = 256
   860: i32 a3 = a3 + 0x0
   862: i32 a4 = a0 + 0x0
   864: i32 a1 = s1 + 0x260
   868: fallthrough
      : @40 (gas: 13)
   869: a2 = 0xffffffff
   872: a0 = 0x0
   874: ecalli 5 // 'get_storage'
   876: a1 = u64 [s1 + 88]
   879: a0 = u64 [a1 + 24]
   882: u64 [s1 + 56] = a0
   885: a0 = u64 [a1 + 16]
   888: u64 [s1 + 64] = a0
   891: a0 = u64 [a1 + 8]
   894: u64 [s1 + 72] = a0
   897: a0 = u64 [a1]
   899: u64 [s1 + 88] = a0
   902: jump @82
      : @41 (gas: 1)
   905: jump @67 if a0 == 3504541104
      : @42 (gas: 1)
   913: jump @68 if a0 != 773487949
      : @43 (gas: 11)
   921: a0 = sp - 32
   924: a0 = a0 & 0xffffffe0
   927: u64 [s1 + 72] = a0
   930: sp = a0
   932: u64 [a0 + 24] = 0
   935: u64 [a0 + 16] = 0
   938: u64 [a0 + 8] = 0
   941: u64 [a0 + 0] = 0
   943: i32 a0 = a0 + 0x0
   945: ecalli 12 // 'value_transferred'
   947: fallthrough
      : @44 (gas: 9)
   948: a3 = u64 [s1 + 72]
   951: a0 = u64 [a3 + 16]
   954: a1 = u64 [a3 + 24]
   957: a2 = u64 [a3 + 8]
   960: a3 = u64 [a3]
   962: a1 = a1 | a2
   965: a0 = a0 | a3
   968: a0 = a0 | a1
   971: jump @68 if a0 != 0
      : @45 (gas: 3)
   975: a0 = u64 [s1 + 88]
   978: a0 = i32 [a0]
   980: jump @68 if a0 <u 36
      : @46 (gas: 47)
   985: i32 a0 = s1 + 0x80
   989: a1 = 0x4
   992: ecalli 2 // 'call_data_load'
   994: a0 = u64 [s1 + 152]
   998: u64 [s1 + 56] = a0
  1001: a0 = u64 [s1 + 144]
  1005: u64 [s1 + 64] = a0
  1008: a0 = u64 [s1 + 136]
  1012: u64 [s1 + 72] = a0
  1015: a0 = u64 [s1 + 128]
  1019: u64 [s1 + 88] = a0
  1022: u64 [s1 + 184] = 0
  1026: u64 [s1 + 176] = 0
  1030: u64 [s1 + 168] = 0
  1034: u64 [s1 + 160] = 1
  1039: a0 = sp - 32
  1042: a0 = a0 & 0xffffffe0
  1045: sp = a0
  1047: u64 [a0 + 24] = 0
  1050: u64 [a0 + 16] = 0
  1053: u64 [a0 + 8] = 0
  1056: u64 [a0 + 0] = 0
  1058: a3 = a0
  1060: u64 [s1 + 32] = a0
  1063: a0 = sp - 8
  1066: a0 = a0 & 0xffffffe0
  1069: sp = a0
  1071: u64 [a0 + 24] = 0
  1074: u64 [a0 + 16] = 0
  1077: u64 [a0 + 8] = 0
  1080: u64 [a0 + 0] = 256
  1084: i32 a3 = a3 + 0x0
  1086: i32 a4 = a0 + 0x0
  1088: i32 a1 = s1 + 0xa0
  1092: a2 = 0xffffffff
  1095: a0 = 0x0
  1097: ecalli 5 // 'get_storage'
  1099: a0 = u64 [s1 + 32]
  1102: a1 = u64 [a0 + 8]
  1105: u64 [s1 + 48] = a1
  1108: a1 = u64 [a0]
  1110: u64 [s1 + 40] = a1
  1113: a0 = u32 [a0 + 16]
  1116: u64 [s1 + 32] = a0
  1119: i32 a0 = s1 + 0xc0
  1123: ecalli 4 // 'caller'
  1125: fallthrough
      : @47 (gas: 22)
  1126: a0 = u64 [s1 + 200]
  1130: a1 = u64 [s1 + 192]
  1134: a2 = i32 [s1 + 208]
  1138: a0 = reverse a0
  1140: a3 = a0 >> 32
  1143: a1 = reverse a1
  1145: a4 = a1 << 32
  1148: a3 = a3 | a4
  1151: a0 = a0 << 32
  1154: a2 = reverse a2
  1156: a2 = a2 >> 32
  1159: a0 = a0 | a2
  1162: a1 = a1 >> 32
  1165: a2 = u64 [s1 + 32]
  1168: a1 = a1 ^ a2
  1171: a2 = u64 [s1 + 40]
  1174: a0 = a0 ^ a2
  1177: a0 = a0 | a1
  1180: a1 = u64 [s1 + 48]
  1183: a1 = a1 ^ a3
  1186: a0 = a0 | a1
  1189: jump @68 if a0 != 0
      : @48 (gas: 27)
  1193: u64 [s1 + 248] = 0
  1197: u64 [s1 + 240] = 0
  1201: u64 [s1 + 232] = 0
  1205: u64 [s1 + 224] = 0
  1209: a0 = sp - 32
  1212: a0 = a0 & 0xffffffe0
  1215: sp = a0
  1217: u64 [a0 + 24] = 0
  1220: u64 [a0 + 16] = 0
  1223: u64 [a0 + 8] = 0
  1226: u64 [a0 + 0] = 0
  1228: a3 = a0
  1230: u64 [s1 + 48] = a0
  1233: a0 = sp - 8
  1236: a0 = a0 & 0xffffffe0
  1239: sp = a0
  1241: u64 [a0 + 24] = 0
  1244: u64 [a0 + 16] = 0
  1247: u64 [a0 + 8] = 0
  1250: u64 [a0 + 0] = 256
  1254: i32 a3 = a3 + 0x0
  1256: i32 a4 = a0 + 0x0
  1258: i32 a1 = s1 + 0xe0
  1262: a2 = 0xffffffff
  1265: a0 = 0x0
  1267: ecalli 5 // 'get_storage'
  1269: fallthrough
      : @49 (gas: 23)
  1270: a0 = u64 [s1 + 48]
  1273: t2 = u64 [a0 + 24]
  1276: a2 = u64 [a0]
  1278: a3 = u64 [a0 + 16]
  1281: t0 = u64 [a0 + 8]
  1284: a0 = u64 [s1 + 56]
  1287: a4 = t2 ^ a0
  1290: a5 = t2 <u a0
  1293: t1 = u64 [s1 + 64]
  1296: a0 = a3 <u t1
  1299: u64 [s1 + 40] = a0
  1302: a5 = a0 if a4 == 0
  1305: a0 = u64 [s1 + 72]
  1308: ra = t0 ^ a0
  1311: a0 = t0 <u a0
  1314: a1 = u64 [s1 + 88]
  1317: u64 [s1 + 48] = a2
  1320: a2 = a2 <u a1
  1323: a0 = a2 if ra == 0
  1326: a1 = a3 ^ t1
  1329: a1 = a1 | a4
  1332: a5 = a0 if a1 == 0
  1335: jump @73 if a5 != 0
      : @50 (gas: 58)
  1339: a1 = u64 [s1 + 64]
  1342: a1 = a3 - a1
  1345: a3 = a1 - a0
  1348: a0 = a1 <u a0
  1351: a1 = u64 [s1 + 56]
  1354: a1 = t2 - a1
  1357: a4 = u64 [s1 + 40]
  1360: a1 = a1 - a4
  1363: a1 = a1 - a0
  1366: a0 = u64 [s1 + 72]
  1369: a0 = t0 - a0
  1372: a0 = a0 - a2
  1375: a2 = u64 [s1 + 88]
  1378: a4 = u64 [s1 + 48]
  1381: a2 = a4 - a2
  1384: u64 [s1 + 280] = 0
  1388: u64 [s1 + 272] = 0
  1392: u64 [s1 + 264] = 0
  1396: u64 [s1 + 256] = 0
  1400: a4 = sp - 32
  1403: a4 = a4 & 0xffffffe0
  1406: sp = a4
  1408: u64 [a4 + 24] = a1
  1411: u64 [a4 + 16] = a3
  1414: u64 [a4 + 8] = a0
  1417: u64 [a4] = a2
  1419: i32 a3 = a4 + 0x0
  1421: i32 a1 = s1 + 0x100
  1425: a2 = 0xffffffff
  1428: a4 = 0x20
  1431: a0 = 0x0
  1433: ecalli 11 // 'set_storage'
  1435: i32 a0 = s1 + 0x120
  1439: ecalli 4 // 'caller'
  1441: a0 = i32 [s1 + 304]
  1445: u64 [s1 + 48] = a0
  1448: a0 = u64 [s1 + 288]
  1452: u64 [s1 + 40] = a0
  1455: a0 = u64 [s1 + 296]
  1459: u64 [s1 + 32] = a0
  1462: ecalli 6 // 'ref_time_left'
  1464: a0 = u64 [s1 + 32]
  1467: u64 [s1 + 328] = a0
  1471: a0 = u64 [s1 + 40]
  1474: u64 [s1 + 320] = a0
  1478: a0 = u64 [s1 + 48]
  1481: u32 [s1 + 336] = a0
  1485: a0 = u64 [s1 + 56]
  1488: u64 [s1 + 376] = a0
  1492: a0 = u64 [s1 + 64]
  1495: u64 [s1 + 368] = a0
  1499: a0 = u64 [s1 + 72]
  1502: u64 [s1 + 360] = a0
  1506: a0 = u64 [s1 + 88]
  1509: u64 [s1 + 352] = a0
  1513: a0 = 0x0
  1515: a1 = 0x0
  1517: ra = 20, jump @0
      : @51 [@dyn 10] (gas: 1)
  1522: jump @70 if a0 == 0
      : @52 (gas: 3)
  1526: a0 = 0x0
  1528: a1 = 0x0
  1530: ra = 22, jump @0
      : @53 [@dyn 11] (gas: 1)
  1535: jump @70 if a0 == 0
      : @54 (gas: 25)
  1539: u32 [s1 + 384] = 0
  1543: u64 [s1 + 440] = 4294967295
  1548: u64 [s1 + 432] = 4294967295
  1553: u64 [s1 + 424] = 4294967295
  1558: u64 [s1 + 416] = 4294967295
  1563: u32 [s1 + 448] = 8
  1568: a1 = s1 + 0x140
  1572: u64 [s1 + 452] = a1
  1576: u64 [s1 + 464] = 4294967295
  1581: u64 [s1 + 456] = 4294967295
  1586: a0 = s1 + 0x1a0
  1590: u64 [s1 + 472] = a0
  1594: a0 = s1 + 0x160
  1598: u64 [s1 + 476] = a0
  1602: a0 = u64 [s1 + 80]
  1605: u64 [s1 + 480] = a0
  1609: u32 [s1 + 484] = 0
  1613: u64 [s1 + 488] = a0
  1617: a0 = s1 + 0x180
  1621: u64 [s1 + 492] = a0
  1625: i32 a0 = s1 + 0x1c0
  1629: ecalli 0 // 'call'
  1630: u64 [s1 + 88] = a0
  1633: ecalli 8 // 'return_data_size'
  1635: fallthrough
      : @55 (gas: 1)
  1636: jump @90 if a0 != 0
      : @56 (gas: 2)
  1640: a0 = u64 [s1 + 88]
  1643: jump @108 if a0 != 0
      : @57 (gas: 24)
  1647: u64 [s1 + 568] = 0
  1651: u64 [s1 + 560] = 0
  1655: u64 [s1 + 552] = 0
  1659: u64 [s1 + 544] = 0
  1663: a0 = sp - 32
  1666: a0 = a0 & 0xffffffe0
  1669: sp = a0
  1671: u64 [a0 + 24] = 0
  1674: u64 [a0 + 16] = 0
  1677: u64 [a0 + 8] = 0
  1680: u64 [a0 + 0] = 0
  1682: a3 = a0
  1684: u64 [s1 + 88] = a0
  1687: a0 = sp - 8
  1690: a0 = a0 & 0xffffffe0
  1693: sp = a0
  1695: u64 [a0 + 24] = 0
  1698: u64 [a0 + 16] = 0
  1701: u64 [a0 + 8] = 0
  1704: u64 [a0 + 0] = 256
  1708: i32 a3 = a3 + 0x0
  1710: i32 a4 = a0 + 0x0
  1712: i32 a1 = s1 + 0x220
  1716: jump @40
      : @58 (gas: 11)
  1719: a0 = sp - 32
  1722: a0 = a0 & 0xffffffe0
  1725: u64 [s1 + 72] = a0
  1728: sp = a0
  1730: u64 [a0 + 24] = 0
  1733: u64 [a0 + 16] = 0
  1736: u64 [a0 + 8] = 0
  1739: u64 [a0 + 0] = 0
  1741: i32 a0 = a0 + 0x0
  1743: ecalli 12 // 'value_transferred'
  1745: fallthrough
      : @59 (gas: 9)
  1746: a3 = u64 [s1 + 72]
  1749: a0 = u64 [a3 + 16]
  1752: a1 = u64 [a3 + 24]
  1755: a2 = u64 [a3 + 8]
  1758: a3 = u64 [a3]
  1760: a1 = a1 | a2
  1763: a0 = a0 | a3
  1766: a0 = a0 | a1
  1769: jump @68 if a0 != 0
      : @60 (gas: 3)
  1773: a0 = u64 [s1 + 88]
  1776: a0 = i32 [a0]
  1778: jump @68 if a0 <u 4
      : @61 (gas: 36)
  1783: u64 [s1 + 600] = 0
  1787: u64 [s1 + 592] = 0
  1791: u64 [s1 + 584] = 0
  1795: u64 [s1 + 576] = 1
  1800: a0 = sp - 32
  1803: a0 = a0 & 0xffffffe0
  1806: sp = a0
  1808: u64 [a0 + 24] = 0
  1811: u64 [a0 + 16] = 0
  1814: u64 [a0 + 8] = 0
  1817: u64 [a0 + 0] = 0
  1819: a3 = a0
  1821: u64 [s1 + 88] = a0
  1824: a0 = sp - 8
  1827: a0 = a0 & 0xffffffe0
  1830: sp = a0
  1832: u64 [a0 + 24] = 0
  1835: u64 [a0 + 16] = 0
  1838: u64 [a0 + 8] = 0
  1841: u64 [a0 + 0] = 256
  1845: i32 a3 = a3 + 0x0
  1847: i32 a4 = a0 + 0x0
  1849: i32 a1 = s1 + 0x240
  1853: a2 = 0xffffffff
  1856: a0 = 0x0
  1858: ecalli 5 // 'get_storage'
  1860: a1 = u64 [s1 + 88]
  1863: a0 = u32 [a1 + 16]
  1866: u64 [s1 + 64] = a0
  1869: a0 = u64 [a1 + 8]
  1872: u64 [s1 + 72] = a0
  1875: a0 = u64 [a1]
  1877: u64 [s1 + 88] = a0
  1880: a0 = 0x40
  1883: a1 = 0x20
  1886: ra = 24, jump @0
      : @62 [@dyn 12] (gas: 1)
  1891: jump @70 if a0 == 0
      : @63 (gas: 16)
  1895: a3 = u64 [s1 + 80]
  1898: a0 = u64 [a3 + 72]
  1901: a1 = u64 [a3 + 88]
  1904: a2 = u64 [a3 + 64]
  1907: a3 = u64 [a3 + 80]
  1910: a4 = reverse a0
  1912: a0 = reverse a1
  1914: a1 = a0 | a4
  1917: a2 = a2 | a3
  1920: a2 = reverse a2
  1922: a1 = a1 | a2
  1925: a1 = a1 >> 32
  1928: a2 = a2 | a4
  1931: a2 = a2 << 32
  1934: a1 = a1 | a2
  1937: jump @70 if a1 != 0
      : @64 (gas: 4)
  1941: i32 a0 = a0 + 0x0
  1943: a1 = 0x20
  1946: u64 [s1 + 56] = a0
  1949: ra = 26, jump @0
      : @65 [@dyn 13] (gas: 1)
  1954: jump @70 if a0 == 0
      : @66 (gas: 64)
  1958: a0 = u64 [s1 + 80]
  1961: a4 = u64 [s1 + 56]
  1964: a5 = a0 + a4
  1967: a0 = u64 [s1 + 64]
  1970: a0 = reverse a0
  1972: a1 = u64 [s1 + 72]
  1975: a1 = reverse a1
  1977: a2 = u64 [s1 + 88]
  1980: a2 = reverse a2
  1982: u8 [a5 + 24] = a2
  1985: u8 [a5 + 11] = 0
  1988: u8 [a5 + 10] = 0
  1991: u8 [a5 + 9] = 0
  1994: u8 [a5 + 7] = 0
  1997: u8 [a5 + 6] = 0
  2000: u8 [a5 + 5] = 0
  2003: u8 [a5 + 4] = 0
  2006: u8 [a5 + 3] = 0
  2009: u8 [a5 + 2] = 0
  2012: u8 [a5 + 1] = 0
  2015: u8 [a5 + 0] = 0
  2017: a3 = a2 >> 56
  2020: u8 [a5 + 31] = a3
  2023: a3 = a2 >> 48
  2026: u8 [a5 + 30] = a3
  2029: a3 = a2 >> 40
  2032: u8 [a5 + 29] = a3
  2035: a3 = a2 >> 32
  2038: u8 [a5 + 28] = a3
  2041: a3 = a2 >> 24
  2044: u8 [a5 + 27] = a3
  2047: a3 = a2 >> 16
  2050: u8 [a5 + 26] = a3
  2053: a2 = a2 >> 8
  2056: u8 [a5 + 25] = a2
  2059: u8 [a5 + 16] = a1
  2062: a2 = a1 >> 56
  2065: u8 [a5 + 23] = a2
  2068: a2 = a1 >> 48
  2071: u8 [a5 + 22] = a2
  2074: a2 = a1 >> 40
  2077: u8 [a5 + 21] = a2
  2080: a2 = a1 >> 32
  2083: u8 [a5 + 20] = a2
  2086: a2 = a1 >> 24
  2089: u8 [a5 + 19] = a2
  2092: a2 = a1 >> 16
  2095: u8 [a5 + 18] = a2
  2098: a1 = a1 >> 8
  2101: u8 [a5 + 17] = a1
  2104: u8 [a5 + 8] = a0
  2107: a1 = a0 >> 56
  2110: u8 [a5 + 15] = a1
  2113: a1 = a0 >> 48
  2116: u8 [a5 + 14] = a1
  2119: a1 = a0 >> 40
  2122: u8 [a5 + 13] = a1
  2125: a0 = a0 >> 32
  2128: u64 [s1 + 88] = a5
  2131: u8 [a5 + 12] = a0
  2134: a1 = 0x20
  2137: a0 = a4
  2139: ra = 0x28
  2142: jump @0
      : @67 (gas: 3)
  2145: a0 = u64 [s1 + 88]
  2148: a0 = i32 [a0]
  2150: jump @71 if a0 >=u 4
      : @68 (gas: 3)
  2154: a0 = 0x0
  2156: a1 = 0x0
  2158: ra = 28, jump @0
      : @69 [@dyn 14] (gas: 1)
  2163: jump @130 if a0 != 0
      : @70 (gas: 1)
  2167: trap
      : @71 (gas: 46)
  2168: u64 [s1 + 664] = 0
  2172: u64 [s1 + 656] = 0
  2176: u64 [s1 + 648] = 0
  2180: u64 [s1 + 640] = 0
  2184: a0 = sp - 32
  2187: a0 = a0 & 0xffffffe0
  2190: sp = a0
  2192: u64 [a0 + 24] = 0
  2195: u64 [a0 + 16] = 0
  2198: u64 [a0 + 8] = 0
  2201: u64 [a0 + 0] = 0
  2203: a3 = a0
  2205: u64 [s1 + 72] = a0
  2208: a0 = sp - 8
  2211: a0 = a0 & 0xffffffe0
  2214: sp = a0
  2216: u64 [a0 + 24] = 0
  2219: u64 [a0 + 16] = 0
  2222: u64 [a0 + 8] = 0
  2225: u64 [a0 + 0] = 256
  2229: i32 a3 = a3 + 0x0
  2231: i32 a4 = a0 + 0x0
  2233: i32 a1 = s1 + 0x280
  2237: a2 = 0xffffffff
  2240: a0 = 0x0
  2242: ecalli 5 // 'get_storage'
  2244: a1 = u64 [s1 + 72]
  2247: a0 = u64 [a1 + 24]
  2250: u64 [s1 + 64] = a0
  2253: a0 = u64 [a1 + 16]
  2256: u64 [s1 + 56] = a0
  2259: a0 = u64 [a1]
  2261: u64 [s1 + 88] = a0
  2264: a0 = u64 [a1 + 8]
  2267: u64 [s1 + 72] = a0
  2270: a0 = sp - 32
  2273: a0 = a0 & 0xffffffe0
  2276: u64 [s1 + 48] = a0
  2279: sp = a0
  2281: u64 [a0 + 24] = 0
  2284: u64 [a0 + 16] = 0
  2287: u64 [a0 + 8] = 0
  2290: u64 [a0 + 0] = 0
  2292: i32 a0 = a0 + 0x0
  2294: ecalli 12 // 'value_transferred'
  2296: fallthrough
      : @72 (gas: 37)
  2297: a3 = u64 [s1 + 48]
  2300: a0 = u64 [a3 + 8]
  2303: a1 = u64 [a3]
  2305: a2 = u64 [a3 + 24]
  2308: a3 = u64 [a3 + 16]
  2311: a4 = u64 [s1 + 72]
  2314: a4 = a4 + a0
  2317: t0 = u64 [s1 + 88]
  2320: t0 = t0 + a1
  2323: a1 = t0 <u a1
  2326: a4 = a4 + a1
  2329: a5 = a4 ^ a0
  2332: a0 = a4 <u a0
  2335: a0 = a1 if a5 == 0
  2338: a5 = u64 [s1 + 56]
  2341: a1 = a3 + a5
  2344: ra = u64 [s1 + 64]
  2347: a2 = a2 + ra
  2350: a3 = a1 <u a3
  2353: a2 = a2 + a3
  2356: t2 = a1 + a0
  2359: a0 = t2 <u a1
  2362: t1 = a2 + a0
  2365: a1 = u64 [s1 + 72]
  2368: a0 = a1 ^ a4
  2371: a1 = a4 <u a1
  2374: a2 = u64 [s1 + 88]
  2377: a2 = t0 <u a2
  2380: a2 = a1 if a0 != 0
  2383: a0 = t2 <u a5
  2386: a1 = ra ^ t1
  2389: a3 = t1 <u ra
  2392: a3 = a0 if a1 == 0
  2395: a0 = a5 ^ t2
  2398: a0 = a0 | a1
  2401: a2 = a3 if a0 != 0
  2404: jump @81 if a2 == 0
      : @73 (gas: 3)
  2407: a1 = 0x20
  2410: a0 = 0x0
  2412: ra = 30, jump @0
      : @74 [@dyn 15] (gas: 1)
  2417: jump @70 if a0 == 0
      : @75 (gas: 8)
  2421: a1 = u64 [s1 + 80]
  2424: u64 [a1 + 24] = 0
  2427: u64 [a1 + 16] = 0
  2430: u64 [a1 + 8] = 0
  2433: u64 [a1 + 0] = 1903904846
  2439: a0 = 0x4
  2442: a1 = 0x20
  2445: ra = 32, jump @0
      : @76 [@dyn 16] (gas: 1)
  2450: jump @70 if a0 == 0
      : @77 (gas: 2)
  2454: a0 = 0x11000000
  2460: fallthrough
      : @78 (gas: 12)
  2461: a1 = u64 [s1 + 80]
  2464: u32 [a1 + 32] = a0
  2467: u32 [a1 + 28] = 0
  2470: u32 [a1 + 24] = 0
  2473: u32 [a1 + 20] = 0
  2476: u32 [a1 + 16] = 0
  2479: u32 [a1 + 12] = 0
  2482: u32 [a1 + 8] = 0
  2485: u32 [a1 + 4] = 0
  2488: a1 = 0x24
  2491: a0 = 0x0
  2493: ra = 34, jump @0
      : @79 [@dyn 17] (gas: 1)
  2498: jump @70 if a0 == 0
      : @80 (gas: 5)
  2502: a1 = i32 [s1 + 80]
  2505: a0 = 0x1
  2508: a2 = 0x24
  2511: ecalli 9 // 'seal_return'
  2513: fallthrough
      : @81 (gas: 22)
  2514: u64 [s1 + 696] = 0
  2518: u64 [s1 + 688] = 0
  2522: u64 [s1 + 680] = 0
  2526: u64 [s1 + 672] = 0
  2530: a0 = sp - 32
  2533: a0 = a0 & 0xffffffe0
  2536: sp = a0
  2538: u64 [s1 + 56] = t1
  2541: u64 [a0 + 24] = t1
  2544: u64 [s1 + 64] = t2
  2547: u64 [a0 + 16] = t2
  2550: u64 [s1 + 72] = a4
  2553: u64 [a0 + 8] = a4
  2556: u64 [s1 + 88] = t0
  2559: u64 [a0] = t0
  2561: i32 a3 = a0 + 0x0
  2563: i32 a1 = s1 + 0x2a0
  2567: a2 = 0xffffffff
  2570: a4 = 0x20
  2573: a0 = 0x0
  2575: ecalli 11 // 'set_storage'
  2577: fallthrough
      : @82 (gas: 3)
  2578: a0 = 0x40
  2581: a1 = 0x20
  2584: ra = 36, jump @0
      : @83 [@dyn 18] (gas: 1)
  2589: jump @70 if a0 == 0
      : @84 (gas: 16)
  2593: a3 = u64 [s1 + 80]
  2596: a0 = u64 [a3 + 72]
  2599: a1 = u64 [a3 + 88]
  2602: a2 = u64 [a3 + 64]
  2605: a3 = u64 [a3 + 80]
  2608: a4 = reverse a0
  2610: a0 = reverse a1
  2612: a1 = a0 | a4
  2615: a2 = a2 | a3
  2618: a2 = reverse a2
  2620: a1 = a1 | a2
  2623: a1 = a1 >> 32
  2626: a2 = a2 | a4
  2629: a2 = a2 << 32
  2632: a1 = a1 | a2
  2635: jump @70 if a1 != 0
      : @85 (gas: 4)
  2639: i32 a0 = a0 + 0x0
  2641: a1 = 0x20
  2644: u64 [s1 + 48] = a0
  2647: ra = 38, jump @0
      : @86 [@dyn 19] (gas: 1)
  2652: jump @70 if a0 == 0
      : @87 (gas: 75)
  2656: a0 = u64 [s1 + 80]
  2659: t0 = u64 [s1 + 48]
  2662: a5 = a0 + t0
  2665: a0 = u64 [s1 + 56]
  2668: a0 = reverse a0
  2670: a1 = u64 [s1 + 64]
  2673: a1 = reverse a1
  2675: a2 = u64 [s1 + 72]
  2678: a2 = reverse a2
  2680: a3 = u64 [s1 + 88]
  2683: a3 = reverse a3
  2685: u8 [a5 + 24] = a3
  2688: a4 = a3 >> 56
  2691: u8 [a5 + 31] = a4
  2694: a4 = a3 >> 48
  2697: u8 [a5 + 30] = a4
  2700: a4 = a3 >> 40
  2703: u8 [a5 + 29] = a4
  2706: a4 = a3 >> 32
  2709: u8 [a5 + 28] = a4
  2712: a4 = a3 >> 24
  2715: u8 [a5 + 27] = a4
  2718: a4 = a3 >> 16
  2721: u8 [a5 + 26] = a4
  2724: a3 = a3 >> 8
  2727: u8 [a5 + 25] = a3
  2730: u8 [a5 + 16] = a2
  2733: a3 = a2 >> 56
  2736: u8 [a5 + 23] = a3
  2739: a3 = a2 >> 48
  2742: u8 [a5 + 22] = a3
  2745: a3 = a2 >> 40
  2748: u8 [a5 + 21] = a3
  2751: a3 = a2 >> 32
  2754: u8 [a5 + 20] = a3
  2757: a3 = a2 >> 24
  2760: u8 [a5 + 19] = a3
  2763: a3 = a2 >> 16
  2766: u8 [a5 + 18] = a3
  2769: a2 = a2 >> 8
  2772: u8 [a5 + 17] = a2
  2775: u8 [a5 + 8] = a1
  2778: a2 = a1 >> 56
  2781: u8 [a5 + 15] = a2
  2784: a2 = a1 >> 48
  2787: u8 [a5 + 14] = a2
  2790: a2 = a1 >> 40
  2793: u8 [a5 + 13] = a2
  2796: a2 = a1 >> 32
  2799: u8 [a5 + 12] = a2
  2802: a2 = a1 >> 24
  2805: u8 [a5 + 11] = a2
  2808: a2 = a1 >> 16
  2811: u8 [a5 + 10] = a2
  2814: a1 = a1 >> 8
  2817: u8 [a5 + 9] = a1
  2820: u8 [a5] = a0
  2822: a1 = a0 >> 56
  2825: u8 [a5 + 7] = a1
  2828: a1 = a0 >> 48
  2831: u8 [a5 + 6] = a1
  2834: a1 = a0 >> 40
  2837: u8 [a5 + 5] = a1
  2840: a1 = a0 >> 32
  2843: u8 [a5 + 4] = a1
  2846: a1 = a0 >> 24
  2849: u8 [a5 + 3] = a1
  2852: a1 = a0 >> 16
  2855: u8 [a5 + 2] = a1
  2858: a0 = a0 >> 8
  2861: u64 [s1 + 88] = a5
  2864: u8 [a5 + 1] = a0
  2867: a1 = 0x20
  2870: a0 = t0
  2872: ra = 40, jump @0
      : @88 [@dyn 20] (gas: 1)
  2877: jump @70 if a0 == 0
      : @89 (gas: 6)
  2881: a1 = i32 [s1 + 88]
  2884: a2 = 0x20
  2887: a0 = 0x0
  2889: ecalli 9 // 'seal_return'
  2891: ecalli 8 // 'return_data_size'
  2893: jump @91
      : @90 (gas: 2)
  2895: ecalli 8 // 'return_data_size'
  2897: fallthrough
      : @91 (gas: 4)
  2898: u64 [s1 + 72] = a0
  2901: a0 = 0x40
  2904: a1 = 0x20
  2907: ra = 42, jump @0
      : @92 [@dyn 21] (gas: 1)
  2912: jump @70 if a0 == 0
      : @93 (gas: 38)
  2916: a3 = u64 [s1 + 80]
  2919: a0 = u64 [a3 + 64]
  2922: a1 = u64 [a3 + 72]
  2925: a2 = u64 [a3 + 88]
  2928: a3 = u64 [a3 + 80]
  2931: t0 = reverse a0
  2933: t1 = reverse a1
  2935: a4 = reverse a2
  2937: a3 = reverse a3
  2939: a1 = u64 [s1 + 72]
  2942: a0 = a1 + 0x1f
  2945: a1 = a0 <u a1
  2948: a0 = a0 & 0xffffffe0
  2951: a2 = a0 + 0x3f
  2954: a0 = a2 <u a0
  2957: a0 = a0 + a1
  2960: a2 = a2 & 0xffffffe0
  2963: a0 = a0 + a3
  2966: a2 = a2 + a4
  2969: u64 [s1 + 64] = a4
  2972: u64 [s1 + 48] = a2
  2975: a1 = a2 <u a4
  2978: a4 = a0 + a1
  2981: a2 = a4 ^ a3
  2984: u64 [s1 + 56] = a3
  2987: a0 = a4 <u a3
  2990: a0 = a1 if a2 == 0
  2993: a5 = t1 + a0
  2996: t2 = a5 <u t1
  2999: a1 = t0 + t2
  3002: a2 = a5 >u 0x0
  3004: a3 = a1 >u 0x0
  3006: a3 = a2 if a1 == 0
  3009: a2 = a5 | a1
  3012: u64 [s1 + 40] = a4
  3015: a4 = a4 >u 0x0
  3017: a4 = a3 if a2 != 0
  3020: jump @125 if a4 != 0
      : @94 (gas: 7)
  3024: a2 = a1 ^ t0
  3027: a3 = a1 <u t0
  3030: t2 = a3 if a2 != 0
  3033: a3 = a5 ^ t1
  3036: a2 = a2 | a3
  3039: a0 = t2 if a2 != 0
  3042: jump @125 if a0 != 0
      : @95 (gas: 7)
  3046: u64 [s1 + 8] = a1
  3049: u64 [s1 + 16] = a5
  3052: u64 [s1 + 24] = t1
  3055: u64 [s1 + 32] = t0
  3058: a0 = 0x40
  3061: a1 = 0x20
  3064: ra = 44, jump @0
      : @96 [@dyn 22] (gas: 1)
  3069: jump @70 if a0 == 0
      : @97 (gas: 25)
  3073: a0 = u64 [s1 + 8]
  3076: a0 = reverse a0
  3078: a1 = u64 [s1 + 16]
  3081: a1 = reverse a1
  3083: a2 = u64 [s1 + 40]
  3086: a2 = reverse a2
  3088: a3 = u64 [s1 + 48]
  3091: a3 = reverse a3
  3093: a4 = u64 [s1 + 80]
  3096: u64 [a4 + 88] = a3
  3099: u64 [a4 + 80] = a2
  3102: u64 [a4 + 72] = a1
  3105: a1 = u64 [s1 + 64]
  3108: a5 = u64 [s1 + 24]
  3111: a1 = a1 | a5
  3114: a2 = u64 [s1 + 56]
  3117: a3 = u64 [s1 + 32]
  3120: a2 = a2 | a3
  3123: a1 = a1 | a2
  3126: a1 = a1 >> 32
  3129: a2 = a2 | a5
  3132: a2 = a2 << 32
  3135: a1 = a1 | a2
  3138: u64 [a4 + 64] = a0
  3141: jump @70 if a1 != 0
      : @98 (gas: 4)
  3145: a0 = i32 [s1 + 64]
  3148: a1 = 0x20
  3151: u64 [s1 + 48] = a0
  3154: ra = 46, jump @0
      : @99 [@dyn 23] (gas: 1)
  3159: jump @70 if a0 == 0
      : @100 (gas: 46)
  3163: a0 = u64 [s1 + 80]
  3166: a1 = u64 [s1 + 48]
  3169: a0 = a0 + a1
  3172: a1 = u64 [s1 + 72]
  3175: a1 = reverse a1
  3177: u8 [a0 + 24] = a1
  3180: u8 [a0 + 23] = 0
  3183: u8 [a0 + 22] = 0
  3186: u8 [a0 + 21] = 0
  3189: u8 [a0 + 20] = 0
  3192: u8 [a0 + 19] = 0
  3195: u8 [a0 + 18] = 0
  3198: u8 [a0 + 17] = 0
  3201: u8 [a0 + 16] = 0
  3204: u8 [a0 + 15] = 0
  3207: u8 [a0 + 14] = 0
  3210: u8 [a0 + 13] = 0
  3213: u8 [a0 + 12] = 0
  3216: u8 [a0 + 11] = 0
  3219: u8 [a0 + 10] = 0
  3222: u8 [a0 + 9] = 0
  3225: u8 [a0 + 8] = 0
  3228: u8 [a0 + 7] = 0
  3231: u8 [a0 + 6] = 0
  3234: u8 [a0 + 5] = 0
  3237: u8 [a0 + 4] = 0
  3240: u8 [a0 + 3] = 0
  3243: u8 [a0 + 2] = 0
  3246: u8 [a0 + 1] = 0
  3249: u8 [a0 + 0] = 0
  3251: a2 = a1 >> 56
  3254: u8 [a0 + 31] = a2
  3257: a2 = a1 >> 48
  3260: u8 [a0 + 30] = a2
  3263: a2 = a1 >> 40
  3266: u8 [a0 + 29] = a2
  3269: a2 = a1 >> 32
  3272: u8 [a0 + 28] = a2
  3275: a2 = a1 >> 24
  3278: u8 [a0 + 27] = a2
  3281: a2 = a1 >> 16
  3284: u8 [a0 + 26] = a2
  3287: a1 = a1 >> 8
  3290: u8 [a0 + 25] = a1
  3293: ecalli 8 // 'return_data_size'
  3295: fallthrough
      : @101 (gas: 11)
  3296: a1 = u64 [s1 + 32]
  3299: a2 = u64 [s1 + 24]
  3302: a1 = a1 | a2
  3305: a2 = 0xffffffe0
  3315: a3 = u64 [s1 + 64]
  3318: a2 = a3 <u a2
  3321: a3 = u64 [s1 + 56]
  3324: a2 = 0 if a3 != 0
  3326: a2 = 0 if a1 != 0
  3328: u64 [s1 + 72] = a0
  3331: jump @70 if a2 == 0
      : @102 (gas: 3)
  3335: a0 = u64 [s1 + 72]
  3338: a0 = a0 >> 32
  3341: jump @70 if a0 != 0
      : @103 (gas: 6)
  3345: a0 = u64 [s1 + 48]
  3348: i32 a0 = a0 + 0x20
  3351: a1 = i32 [s1 + 72]
  3354: u64 [s1 + 56] = a0
  3357: u64 [s1 + 64] = a1
  3360: ra = 48, jump @0
      : @104 [@dyn 24] (gas: 1)
  3365: jump @70 if a0 == 0
      : @105 (gas: 9)
  3369: a0 = u64 [s1 + 80]
  3372: a1 = u64 [s1 + 56]
  3375: i32 a0 = a0 + a1
  3378: a1 = u64 [s1 + 72]
  3381: u32 [s1 + 512] = a1
  3385: i32 a1 = s1 + 0x200
  3389: a2 = 0x0
  3391: ecalli 7 // 'return_data_copy'
  3393: fallthrough
      : @106 (gas: 3)
  3394: a0 = i32 [s1 + 512]
  3398: a1 = u64 [s1 + 64]
  3401: jump @56 if a0 >=u a1
      : @107 (gas: 1)
  3405: jump @70
      : @108 (gas: 3)
  3408: a0 = 0x40
  3411: a1 = 0x20
  3414: ra = 50, jump @0
      : @109 [@dyn 25] (gas: 1)
  3419: jump @70 if a0 == 0
      : @110 (gas: 20)
  3423: a3 = u64 [s1 + 80]
  3426: a0 = u64 [a3 + 72]
  3429: a1 = u64 [a3 + 64]
  3432: a2 = u64 [a3 + 80]
  3435: a3 = u64 [a3 + 88]
  3438: a4 = reverse a0
  3440: a1 = reverse a1
  3442: a0 = reverse a2
  3444: a2 = reverse a3
  3446: u64 [s1 + 88] = a0
  3449: u64 [s1 + 64] = a1
  3452: a0 = a0 | a1
  3455: a1 = a2 | a4
  3458: a1 = a1 | a0
  3461: a1 = a1 >> 32
  3464: u64 [s1 + 72] = a4
  3467: a0 = a0 | a4
  3470: a0 = a0 << 32
  3473: a0 = a0 | a1
  3476: jump @70 if a0 != 0
      : @111 (gas: 5)
  3480: u64 [s1 + 48] = a2
  3483: i32 a0 = a2 + 0x0
  3485: a1 = 0x20
  3488: u64 [s1 + 56] = a0
  3491: ra = 52, jump @0
      : @112 [@dyn 26] (gas: 1)
  3496: jump @70 if a0 == 0
      : @113 (gas: 47)
  3500: a0 = u64 [s1 + 80]
  3503: a1 = u64 [s1 + 56]
  3506: a2 = a0 + a1
  3509: u8 [a2 + 31] = 0
  3512: u8 [a2 + 30] = 0
  3515: u8 [a2 + 29] = 0
  3518: u8 [a2 + 28] = 0
  3521: u8 [a2 + 27] = 0
  3524: u8 [a2 + 26] = 0
  3527: u8 [a2 + 25] = 0
  3530: u8 [a2 + 24] = 0
  3533: u8 [a2 + 23] = 0
  3536: u8 [a2 + 22] = 0
  3539: u8 [a2 + 21] = 0
  3542: u8 [a2 + 20] = 0
  3545: u8 [a2 + 19] = 0
  3548: u8 [a2 + 18] = 0
  3551: u8 [a2 + 17] = 0
  3554: u8 [a2 + 16] = 0
  3557: u8 [a2 + 15] = 0
  3560: u8 [a2 + 14] = 0
  3563: u8 [a2 + 13] = 0
  3566: u8 [a2 + 12] = 0
  3569: u8 [a2 + 11] = 0
  3572: u8 [a2 + 10] = 0
  3575: u8 [a2 + 9] = 0
  3578: u8 [a2 + 8] = 0
  3581: u8 [a2 + 7] = 0
  3584: u8 [a2 + 6] = 0
  3587: u8 [a2 + 5] = 0
  3590: u8 [a2 + 4] = 0
  3593: u8 [a2 + 3] = 160
  3598: u8 [a2 + 2] = 121
  3602: u8 [a2 + 1] = 195
  3607: a1 = u64 [s1 + 72]
  3610: a4 = u64 [s1 + 64]
  3613: a4 = a4 | a1
  3616: a1 = 0xfffffffc
  3626: a3 = u64 [s1 + 48]
  3629: a1 = a3 <u a1
  3632: a3 = u64 [s1 + 88]
  3635: a1 = 0 if a3 != 0
  3637: u64 [s1 + 72] = a4
  3640: a1 = 0 if a4 != 0
  3642: u64 [s1 + 64] = a2
  3645: u8 [a2 + 0] = 8
  3648: jump @70 if a1 == 0
      : @114 (gas: 5)
  3652: a0 = u64 [s1 + 56]
  3655: i32 a0 = a0 + 0x4
  3658: a1 = 0x20
  3661: u64 [s1 + 40] = a0
  3664: ra = 54, jump @0
      : @115 [@dyn 27] (gas: 1)
  3669: jump @70 if a0 == 0
      : @116 (gas: 43)
  3673: a0 = u64 [s1 + 80]
  3676: a1 = u64 [s1 + 40]
  3679: a0 = a0 + a1
  3682: u8 [a0 + 31] = 32
  3686: u8 [a0 + 30] = 0
  3689: u8 [a0 + 29] = 0
  3692: u8 [a0 + 28] = 0
  3695: u8 [a0 + 27] = 0
  3698: u8 [a0 + 26] = 0
  3701: u8 [a0 + 25] = 0
  3704: u8 [a0 + 24] = 0
  3707: u8 [a0 + 23] = 0
  3710: u8 [a0 + 22] = 0
  3713: u8 [a0 + 21] = 0
  3716: u8 [a0 + 20] = 0
  3719: u8 [a0 + 19] = 0
  3722: u8 [a0 + 18] = 0
  3725: u8 [a0 + 17] = 0
  3728: u8 [a0 + 16] = 0
  3731: u8 [a0 + 15] = 0
  3734: u8 [a0 + 14] = 0
  3737: u8 [a0 + 13] = 0
  3740: u8 [a0 + 12] = 0
  3743: u8 [a0 + 11] = 0
  3746: u8 [a0 + 10] = 0
  3749: u8 [a0 + 9] = 0
  3752: u8 [a0 + 8] = 0
  3755: u8 [a0 + 7] = 0
  3758: u8 [a0 + 6] = 0
  3761: u8 [a0 + 5] = 0
  3764: u8 [a0 + 4] = 0
  3767: u8 [a0 + 3] = 0
  3770: u8 [a0 + 2] = 0
  3773: u8 [a0 + 1] = 0
  3776: a1 = 0xffffffdc
  3786: a2 = u64 [s1 + 48]
  3789: a1 = a2 <u a1
  3792: a2 = u64 [s1 + 88]
  3795: a1 = 0 if a2 != 0
  3797: a2 = u64 [s1 + 72]
  3800: a1 = 0 if a2 != 0
  3802: u8 [a0 + 0] = 0
  3804: jump @70 if a1 == 0
      : @117 (gas: 5)
  3808: a0 = u64 [s1 + 56]
  3811: i32 a0 = a0 + 0x24
  3814: a1 = 0x20
  3817: u64 [s1 + 40] = a0
  3820: ra = 56, jump @0
      : @118 [@dyn 28] (gas: 1)
  3825: jump @70 if a0 == 0
      : @119 (gas: 43)
  3829: a0 = u64 [s1 + 80]
  3832: a1 = u64 [s1 + 40]
  3835: a0 = a0 + a1
  3838: u8 [a0 + 31] = 15
  3842: u8 [a0 + 30] = 0
  3845: u8 [a0 + 29] = 0
  3848: u8 [a0 + 28] = 0
  3851: u8 [a0 + 27] = 0
  3854: u8 [a0 + 26] = 0
  3857: u8 [a0 + 25] = 0
  3860: u8 [a0 + 24] = 0
  3863: u8 [a0 + 23] = 0
  3866: u8 [a0 + 22] = 0
  3869: u8 [a0 + 21] = 0
  3872: u8 [a0 + 20] = 0
  3875: u8 [a0 + 19] = 0
  3878: u8 [a0 + 18] = 0
  3881: u8 [a0 + 17] = 0
  3884: u8 [a0 + 16] = 0
  3887: u8 [a0 + 15] = 0
  3890: u8 [a0 + 14] = 0
  3893: u8 [a0 + 13] = 0
  3896: u8 [a0 + 12] = 0
  3899: u8 [a0 + 11] = 0
  3902: u8 [a0 + 10] = 0
  3905: u8 [a0 + 9] = 0
  3908: u8 [a0 + 8] = 0
  3911: u8 [a0 + 7] = 0
  3914: u8 [a0 + 6] = 0
  3917: u8 [a0 + 5] = 0
  3920: u8 [a0 + 4] = 0
  3923: u8 [a0 + 3] = 0
  3926: u8 [a0 + 2] = 0
  3929: u8 [a0 + 1] = 0
  3932: a1 = 0xffffffbc
  3942: a2 = u64 [s1 + 48]
  3945: a1 = a2 <u a1
  3948: a2 = u64 [s1 + 88]
  3951: a1 = 0 if a2 != 0
  3953: a2 = u64 [s1 + 72]
  3956: a1 = 0 if a2 != 0
  3958: u8 [a0 + 0] = 0
  3960: jump @70 if a1 == 0
      : @120 (gas: 5)
  3964: a0 = u64 [s1 + 56]
  3967: i32 a0 = a0 + 0x44
  3970: a1 = 0x20
  3973: u64 [s1 + 88] = a0
  3976: ra = 58, jump @0
      : @121 [@dyn 29] (gas: 1)
  3981: jump @70 if a0 == 0
      : @122 (gas: 39)
  3985: a0 = u64 [s1 + 80]
  3988: a1 = u64 [s1 + 88]
  3991: a0 = a0 + a1
  3994: u8 [a0 + 31] = 0
  3997: u8 [a0 + 30] = 0
  4000: u8 [a0 + 29] = 0
  4003: u8 [a0 + 28] = 0
  4006: u8 [a0 + 27] = 0
  4009: u8 [a0 + 26] = 0
  4012: u8 [a0 + 25] = 0
  4015: u8 [a0 + 24] = 0
  4018: u8 [a0 + 23] = 0
  4021: u8 [a0 + 22] = 0
  4024: u8 [a0 + 21] = 0
  4027: u8 [a0 + 20] = 0
  4030: u8 [a0 + 19] = 0
  4033: u8 [a0 + 18] = 0
  4036: u8 [a0 + 17] = 0
  4039: u8 [a0 + 16] = 0
  4042: u8 [a0 + 15] = 0
  4045: u8 [a0 + 14] = 100
  4049: u8 [a0 + 13] = 101
  4053: u8 [a0 + 12] = 108
  4057: u8 [a0 + 11] = 105
  4061: u8 [a0 + 10] = 97
  4065: u8 [a0 + 9] = 102
  4069: u8 [a0 + 8] = 32
  4073: a4 = 0x72
  4076: u8 [a0 + 7] = a4
  4079: u8 [a0 + 6] = 101
  4083: u8 [a0 + 5] = 102
  4087: u8 [a0 + 4] = 115
  4091: u8 [a0 + 3] = 110
  4095: u8 [a0 + 2] = 97
  4099: u8 [a0 + 1] = a4
  4102: u8 [a0 + 0] = 84
  4105: a1 = 0x64
  4108: a0 = u64 [s1 + 56]
  4111: ra = 60, jump @0
      : @123 [@dyn 30] (gas: 1)
  4116: jump @70 if a0 == 0
      : @124 (gas: 5)
  4120: a1 = i32 [s1 + 64]
  4123: a0 = 0x1
  4126: a2 = 0x64
  4129: ecalli 9 // 'seal_return'
  4131: fallthrough
      : @125 (gas: 3)
  4132: a1 = 0x20
  4135: a0 = 0x0
  4137: ra = 62, jump @0
      : @126 [@dyn 31] (gas: 1)
  4142: jump @70 if a0 == 0
      : @127 (gas: 8)
  4146: a1 = u64 [s1 + 80]
  4149: u64 [a1 + 24] = 0
  4152: u64 [a1 + 16] = 0
  4155: u64 [a1 + 8] = 0
  4158: u64 [a1 + 0] = 1903904846
  4164: a0 = 0x4
  4167: a1 = 0x20
  4170: ra = 64, jump @0
      : @128 [@dyn 32] (gas: 1)
  4175: jump @70 if a0 == 0
      : @129 (gas: 2)
  4179: a0 = 0x41000000
  4185: jump @78
      : @130 (gas: 7)
  4188: a1 = i32 [s1 + 80]
  4191: a0 = 0x1
  4194: a2 = 0x0
  4196: ecalli 9 // 'seal_return'
  4198: a0 = 0x0
  4200: ra = 0x42
  4203: jump @8
      : @131 [export #0: 'call'] (gas: 2)
  4206: a0 = 0x0
  4208: ra = 66, jump @8
      : @132 [@dyn 33] [export #1: 'deploy'] (gas: 2)
  4213: a0 = 0x1
  4216: ra = 68, jump @8
      : @133 [@dyn 34] (gas: 1)
  4221: trap

